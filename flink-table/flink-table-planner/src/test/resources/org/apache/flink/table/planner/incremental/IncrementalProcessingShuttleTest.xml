<?xml version="1.0" ?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to you under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at
http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<Root>
	<TestCase name="testIncrementalProcessingShuttleWithJoin">
		<Resource name="origin">
			<![CDATA[LogicalSink(table=[testCatalog.default.sink], fields=[a]), rowType=[RecordType(BIGINT a)]
+- LogicalProject(a=[$0]), rowType=[RecordType(BIGINT a)]
   +- LogicalJoin(condition=[=($0, $1)], joinType=[inner]), rowType=[RecordType(BIGINT a, BIGINT a0)]
      :- LogicalTableScan(table=[[testCatalog, default, t1]]), rowType=[RecordType(BIGINT a)]
      +- LogicalTableScan(table=[[testCatalog, default, t2]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="ast">
			<![CDATA[
LogicalSink(table=[testCatalog.default.sink], fields=[a]), rowType=[RecordType(BIGINT a)]
+- LogicalProject(a=[$0]), rowType=[RecordType(BIGINT a)]
   +- LogicalUnion(all=[true]), rowType=[RecordType(BIGINT a, BIGINT a0)]
      :- LogicalJoin(condition=[=($0, $1)], joinType=[inner]), rowType=[RecordType(BIGINT a, BIGINT a0)]
      :  :- LogicalTableScan(table=[[testCatalog, default, t1]], hints=[[[OPTIONS inheritPath:[] options:{scan-mode=FULL_NEW}]]]), rowType=[RecordType(BIGINT a)]
      :  +- LogicalTableScan(table=[[testCatalog, default, t2]], hints=[[[OPTIONS inheritPath:[] options:{scan-mode=DELTA}]]]), rowType=[RecordType(BIGINT a)]
      +- LogicalJoin(condition=[=($0, $1)], joinType=[inner]), rowType=[RecordType(BIGINT a, BIGINT a0)]
         :- LogicalTableScan(table=[[testCatalog, default, t1]], hints=[[[OPTIONS inheritPath:[] options:{scan-mode=DELTA}]]]), rowType=[RecordType(BIGINT a)]
         +- LogicalTableScan(table=[[testCatalog, default, t2]], hints=[[[OPTIONS inheritPath:[] options:{scan-mode=FULL_OLD}]]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="optimized rel plan">
			<![CDATA[
Sink(table=[testCatalog.default.sink], fields=[a]), rowType=[RecordType(BIGINT a)]
+- Union(all=[true], union=[a]), rowType=[RecordType(BIGINT a)]
   :- Calc(select=[a]), rowType=[RecordType(BIGINT a)]
   :  +- HashJoin(joinType=[InnerJoin], where=[=(a, a0)], select=[a, a0], build=[left]), rowType=[RecordType(BIGINT a, BIGINT a0)]
   :     :- Exchange(distribution=[hash[a]]), rowType=[RecordType(BIGINT a)]
   :     :  +- TableSourceScan(table=[[testCatalog, default, t1]], fields=[a], hints=[[[OPTIONS options:{scan-mode=FULL_NEW}]]]), rowType=[RecordType(BIGINT a)]
   :     +- Exchange(distribution=[hash[a]]), rowType=[RecordType(BIGINT a)]
   :        +- TableSourceScan(table=[[testCatalog, default, t2]], fields=[a], hints=[[[OPTIONS options:{scan-mode=DELTA}]]]), rowType=[RecordType(BIGINT a)]
   +- Calc(select=[a]), rowType=[RecordType(BIGINT a)]
      +- HashJoin(joinType=[InnerJoin], where=[=(a, a0)], select=[a, a0], build=[left]), rowType=[RecordType(BIGINT a, BIGINT a0)]
         :- Exchange(distribution=[hash[a]]), rowType=[RecordType(BIGINT a)]
         :  +- TableSourceScan(table=[[testCatalog, default, t1]], fields=[a], hints=[[[OPTIONS options:{scan-mode=DELTA}]]]), rowType=[RecordType(BIGINT a)]
         +- Exchange(distribution=[hash[a]]), rowType=[RecordType(BIGINT a)]
            +- TableSourceScan(table=[[testCatalog, default, t2]], fields=[a], hints=[[[OPTIONS options:{scan-mode=FULL_OLD}]]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="optimized exec plan">
			<![CDATA[
Sink(table=[testCatalog.default.sink], fields=[a])
+- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[a])\n:- Calc(select=[a])\n:  +- HashJoin(joinType=[InnerJoin], where=[(a = a0)], select=[a, a0], build=[left])\n:     :- [#1] Exchange(distribution=[hash[a]])\n:     +- [#2] Exchange(distribution=[hash[a]])\n+- Calc(select=[a])\n   +- HashJoin(joinType=[InnerJoin], where=[(a = a0)], select=[a, a0], build=[left])\n      :- [#3] Exchange(distribution=[hash[a]])\n      +- [#4] Exchange(distribution=[hash[a]])\n])
   :- Exchange(distribution=[hash[a]])
   :  +- TableSourceScan(table=[[testCatalog, default, t1]], fields=[a], hints=[[[OPTIONS options:{scan-mode=FULL_NEW}]]])
   :- Exchange(distribution=[hash[a]])
   :  +- TableSourceScan(table=[[testCatalog, default, t2]], fields=[a], hints=[[[OPTIONS options:{scan-mode=DELTA}]]])
   :- Exchange(distribution=[hash[a]])
   :  +- TableSourceScan(table=[[testCatalog, default, t1]], fields=[a], hints=[[[OPTIONS options:{scan-mode=DELTA}]]])
   +- Exchange(distribution=[hash[a]])
      +- TableSourceScan(table=[[testCatalog, default, t2]], fields=[a], hints=[[[OPTIONS options:{scan-mode=FULL_OLD}]]])
]]>
		</Resource>
	</TestCase>
	<TestCase name="testIncrementalProcessingShuttleWithJoinEmptyDelta">
		<Resource name="origin">
			<![CDATA[LogicalSink(table=[testCatalog.default.sink], fields=[a]), rowType=[RecordType(BIGINT a)]
+- LogicalProject(a=[$0]), rowType=[RecordType(BIGINT a)]
   +- LogicalJoin(condition=[=($0, $1)], joinType=[inner]), rowType=[RecordType(BIGINT a, BIGINT a0)]
      :- LogicalTableScan(table=[[testCatalog, default, t1]]), rowType=[RecordType(BIGINT a)]
      +- LogicalTableScan(table=[[testCatalog, default, t2]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="ast">
			<![CDATA[
LogicalSink(table=[testCatalog.default.sink], fields=[a]), rowType=[RecordType(BIGINT a)]
+- LogicalProject(a=[$0]), rowType=[RecordType(BIGINT a)]
   +- LogicalJoin(condition=[=($0, $1)], joinType=[inner]), rowType=[RecordType(BIGINT a, BIGINT a0)]
      :- LogicalTableScan(table=[[testCatalog, default, t1]], hints=[[[OPTIONS inheritPath:[] options:{scan-mode=FULL_NEW}]]]), rowType=[RecordType(BIGINT a)]
      +- LogicalTableScan(table=[[testCatalog, default, t2]], hints=[[[OPTIONS inheritPath:[] options:{scan-mode=DELTA}]]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="optimized rel plan">
			<![CDATA[
Sink(table=[testCatalog.default.sink], fields=[a]), rowType=[RecordType(BIGINT a)]
+- Calc(select=[a]), rowType=[RecordType(BIGINT a)]
   +- HashJoin(joinType=[InnerJoin], where=[=(a, a0)], select=[a, a0], build=[left]), rowType=[RecordType(BIGINT a, BIGINT a0)]
      :- Exchange(distribution=[hash[a]]), rowType=[RecordType(BIGINT a)]
      :  +- TableSourceScan(table=[[testCatalog, default, t1]], fields=[a], hints=[[[OPTIONS options:{scan-mode=FULL_NEW}]]]), rowType=[RecordType(BIGINT a)]
      +- Exchange(distribution=[hash[a]]), rowType=[RecordType(BIGINT a)]
         +- TableSourceScan(table=[[testCatalog, default, t2]], fields=[a], hints=[[[OPTIONS options:{scan-mode=DELTA}]]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="optimized exec plan">
			<![CDATA[
Sink(table=[testCatalog.default.sink], fields=[a])
+- Calc(select=[a])
   +- HashJoin(joinType=[InnerJoin], where=[(a = a0)], select=[a, a0], build=[left])
      :- Exchange(distribution=[hash[a]])
      :  +- TableSourceScan(table=[[testCatalog, default, t1]], fields=[a], hints=[[[OPTIONS options:{scan-mode=FULL_NEW}]]])
      +- Exchange(distribution=[hash[a]])
         +- TableSourceScan(table=[[testCatalog, default, t2]], fields=[a], hints=[[[OPTIONS options:{scan-mode=DELTA}]]])
]]>
		</Resource>
	</TestCase>
	<TestCase name="testIncrementalProcessingShuttleWithJoinFirstRun">
		<Resource name="origin">
			<![CDATA[LogicalSink(table=[testCatalog.default.sink], fields=[a]), rowType=[RecordType(BIGINT a)]
+- LogicalProject(a=[$0]), rowType=[RecordType(BIGINT a)]
   +- LogicalJoin(condition=[=($0, $1)], joinType=[inner]), rowType=[RecordType(BIGINT a, BIGINT a0)]
      :- LogicalTableScan(table=[[testCatalog, default, t1]]), rowType=[RecordType(BIGINT a)]
      +- LogicalTableScan(table=[[testCatalog, default, t2]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="ast">
			<![CDATA[
LogicalSink(table=[testCatalog.default.sink], fields=[a]), rowType=[RecordType(BIGINT a)]
+- LogicalProject(a=[$0]), rowType=[RecordType(BIGINT a)]
   +- LogicalJoin(condition=[=($0, $1)], joinType=[inner]), rowType=[RecordType(BIGINT a, BIGINT a0)]
      :- LogicalTableScan(table=[[testCatalog, default, t1]], hints=[[[OPTIONS inheritPath:[] options:{scan-mode=FULL_NEW}]]]), rowType=[RecordType(BIGINT a)]
      +- LogicalTableScan(table=[[testCatalog, default, t2]], hints=[[[OPTIONS inheritPath:[] options:{scan-mode=DELTA}]]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="optimized rel plan">
			<![CDATA[
Sink(table=[testCatalog.default.sink], fields=[a]), rowType=[RecordType(BIGINT a)]
+- Calc(select=[a]), rowType=[RecordType(BIGINT a)]
   +- HashJoin(joinType=[InnerJoin], where=[=(a, a0)], select=[a, a0], build=[left]), rowType=[RecordType(BIGINT a, BIGINT a0)]
      :- Exchange(distribution=[hash[a]]), rowType=[RecordType(BIGINT a)]
      :  +- TableSourceScan(table=[[testCatalog, default, t1]], fields=[a], hints=[[[OPTIONS options:{scan-mode=FULL_NEW}]]]), rowType=[RecordType(BIGINT a)]
      +- Exchange(distribution=[hash[a]]), rowType=[RecordType(BIGINT a)]
         +- TableSourceScan(table=[[testCatalog, default, t2]], fields=[a], hints=[[[OPTIONS options:{scan-mode=DELTA}]]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="optimized exec plan">
			<![CDATA[
Sink(table=[testCatalog.default.sink], fields=[a])
+- Calc(select=[a])
   +- HashJoin(joinType=[InnerJoin], where=[(a = a0)], select=[a, a0], build=[left])
      :- Exchange(distribution=[hash[a]])
      :  +- TableSourceScan(table=[[testCatalog, default, t1]], fields=[a], hints=[[[OPTIONS options:{scan-mode=FULL_NEW}]]])
      +- Exchange(distribution=[hash[a]])
         +- TableSourceScan(table=[[testCatalog, default, t2]], fields=[a], hints=[[[OPTIONS options:{scan-mode=DELTA}]]])
]]>
		</Resource>
	</TestCase>
	<TestCase name="testIncrementalProcessingShuttleWithMultipleJoins">
		<Resource name="origin">
			<![CDATA[LogicalSink(table=[testCatalog.default.sink], fields=[a]), rowType=[RecordType(BIGINT a)]
+- LogicalProject(a=[$0]), rowType=[RecordType(BIGINT a)]
   +- LogicalJoin(condition=[=($0, $2)], joinType=[inner]), rowType=[RecordType(BIGINT a, BIGINT a0, BIGINT a1)]
      :- LogicalJoin(condition=[=($0, $1)], joinType=[inner]), rowType=[RecordType(BIGINT a, BIGINT a0)]
      :  :- LogicalTableScan(table=[[testCatalog, default, t1]]), rowType=[RecordType(BIGINT a)]
      :  +- LogicalTableScan(table=[[testCatalog, default, t2]]), rowType=[RecordType(BIGINT a)]
      +- LogicalTableScan(table=[[testCatalog, default, t3]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="ast">
			<![CDATA[
LogicalSink(table=[testCatalog.default.sink], fields=[a]), rowType=[RecordType(BIGINT a)]
+- LogicalProject(a=[$0]), rowType=[RecordType(BIGINT a)]
   +- LogicalUnion(all=[true]), rowType=[RecordType(BIGINT a, BIGINT a0, BIGINT a1)]
      :- LogicalJoin(condition=[=($0, $2)], joinType=[inner]), rowType=[RecordType(BIGINT a, BIGINT a0, BIGINT a1)]
      :  :- LogicalJoin(condition=[=($0, $1)], joinType=[inner]), rowType=[RecordType(BIGINT a, BIGINT a0)]
      :  :  :- LogicalTableScan(table=[[testCatalog, default, t1]], hints=[[[OPTIONS inheritPath:[] options:{scan-mode=FULL_NEW}]]]), rowType=[RecordType(BIGINT a)]
      :  :  +- LogicalTableScan(table=[[testCatalog, default, t2]], hints=[[[OPTIONS inheritPath:[] options:{scan-mode=FULL_NEW}]]]), rowType=[RecordType(BIGINT a)]
      :  +- LogicalTableScan(table=[[testCatalog, default, t3]], hints=[[[OPTIONS inheritPath:[] options:{scan-mode=DELTA}]]]), rowType=[RecordType(BIGINT a)]
      +- LogicalJoin(condition=[=($0, $2)], joinType=[inner]), rowType=[RecordType(BIGINT a, BIGINT a0, BIGINT a1)]
         :- LogicalUnion(all=[true]), rowType=[RecordType(BIGINT a, BIGINT a0)]
         :  :- LogicalJoin(condition=[=($0, $1)], joinType=[inner]), rowType=[RecordType(BIGINT a, BIGINT a0)]
         :  :  :- LogicalTableScan(table=[[testCatalog, default, t1]], hints=[[[OPTIONS inheritPath:[] options:{scan-mode=FULL_NEW}]]]), rowType=[RecordType(BIGINT a)]
         :  :  +- LogicalTableScan(table=[[testCatalog, default, t2]], hints=[[[OPTIONS inheritPath:[] options:{scan-mode=DELTA}]]]), rowType=[RecordType(BIGINT a)]
         :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner]), rowType=[RecordType(BIGINT a, BIGINT a0)]
         :     :- LogicalTableScan(table=[[testCatalog, default, t1]], hints=[[[OPTIONS inheritPath:[] options:{scan-mode=DELTA}]]]), rowType=[RecordType(BIGINT a)]
         :     +- LogicalTableScan(table=[[testCatalog, default, t2]], hints=[[[OPTIONS inheritPath:[] options:{scan-mode=FULL_OLD}]]]), rowType=[RecordType(BIGINT a)]
         +- LogicalTableScan(table=[[testCatalog, default, t3]], hints=[[[OPTIONS inheritPath:[] options:{scan-mode=FULL_OLD}]]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="optimized rel plan">
			<![CDATA[
Sink(table=[testCatalog.default.sink], fields=[a]), rowType=[RecordType(BIGINT a)]
+- Union(all=[true], union=[a]), rowType=[RecordType(BIGINT a)]
   :- Calc(select=[a]), rowType=[RecordType(BIGINT a)]
   :  +- HashJoin(joinType=[InnerJoin], where=[=(a, a0)], select=[a, a0], build=[left]), rowType=[RecordType(BIGINT a, BIGINT a0)]
   :     :- Calc(select=[a]), rowType=[RecordType(BIGINT a)]
   :     :  +- HashJoin(joinType=[InnerJoin], where=[=(a, a0)], select=[a, a0], build=[left]), rowType=[RecordType(BIGINT a, BIGINT a0)]
   :     :     :- Exchange(distribution=[hash[a]]), rowType=[RecordType(BIGINT a)]
   :     :     :  +- TableSourceScan(table=[[testCatalog, default, t1]], fields=[a], hints=[[[OPTIONS options:{scan-mode=FULL_NEW}]]]), rowType=[RecordType(BIGINT a)]
   :     :     +- Exchange(distribution=[hash[a]]), rowType=[RecordType(BIGINT a)]
   :     :        +- TableSourceScan(table=[[testCatalog, default, t2]], fields=[a], hints=[[[OPTIONS options:{scan-mode=FULL_NEW}]]]), rowType=[RecordType(BIGINT a)]
   :     +- Exchange(distribution=[hash[a]]), rowType=[RecordType(BIGINT a)]
   :        +- TableSourceScan(table=[[testCatalog, default, t3]], fields=[a], hints=[[[OPTIONS options:{scan-mode=DELTA}]]]), rowType=[RecordType(BIGINT a)]
   +- Calc(select=[a]), rowType=[RecordType(BIGINT a)]
      +- HashJoin(joinType=[InnerJoin], where=[=(a, a0)], select=[a, a0], build=[left]), rowType=[RecordType(BIGINT a, BIGINT a0)]
         :- Union(all=[true], union=[a]), rowType=[RecordType(BIGINT a)]
         :  :- Calc(select=[a]), rowType=[RecordType(BIGINT a)]
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(a, a0)], select=[a, a0], build=[left]), rowType=[RecordType(BIGINT a, BIGINT a0)]
         :  :     :- Exchange(distribution=[hash[a]]), rowType=[RecordType(BIGINT a)]
         :  :     :  +- TableSourceScan(table=[[testCatalog, default, t1]], fields=[a], hints=[[[OPTIONS options:{scan-mode=FULL_NEW}]]]), rowType=[RecordType(BIGINT a)]
         :  :     +- Exchange(distribution=[hash[a]]), rowType=[RecordType(BIGINT a)]
         :  :        +- TableSourceScan(table=[[testCatalog, default, t2]], fields=[a], hints=[[[OPTIONS options:{scan-mode=DELTA}]]]), rowType=[RecordType(BIGINT a)]
         :  +- Calc(select=[a]), rowType=[RecordType(BIGINT a)]
         :     +- HashJoin(joinType=[InnerJoin], where=[=(a, a0)], select=[a, a0], build=[left]), rowType=[RecordType(BIGINT a, BIGINT a0)]
         :        :- Exchange(distribution=[hash[a]]), rowType=[RecordType(BIGINT a)]
         :        :  +- TableSourceScan(table=[[testCatalog, default, t1]], fields=[a], hints=[[[OPTIONS options:{scan-mode=DELTA}]]]), rowType=[RecordType(BIGINT a)]
         :        +- Exchange(distribution=[hash[a]]), rowType=[RecordType(BIGINT a)]
         :           +- TableSourceScan(table=[[testCatalog, default, t2]], fields=[a], hints=[[[OPTIONS options:{scan-mode=FULL_OLD}]]]), rowType=[RecordType(BIGINT a)]
         +- Exchange(distribution=[hash[a]]), rowType=[RecordType(BIGINT a)]
            +- TableSourceScan(table=[[testCatalog, default, t3]], fields=[a], hints=[[[OPTIONS options:{scan-mode=FULL_OLD}]]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="optimized exec plan">
			<![CDATA[
Sink(table=[testCatalog.default.sink], fields=[a])
+- MultipleInput(readOrder=[2,3,0,1,0,1,0,1], members=[\nUnion(all=[true], union=[a])\n:- Calc(select=[a])\n:  +- HashJoin(joinType=[InnerJoin], where=[(a = a0)], select=[a, a0], build=[left])\n:     :- Calc(select=[a])\n:     :  +- HashJoin(joinType=[InnerJoin], where=[(a = a0)], select=[a, a0], build=[left])\n:     :     :- [#3] Exchange(distribution=[hash[a]])\n:     :     +- [#4] Exchange(distribution=[hash[a]])\n:     +- [#1] Exchange(distribution=[hash[a]])\n+- Calc(select=[a])\n   +- HashJoin(joinType=[InnerJoin], where=[(a = a0)], select=[a, a0], build=[left])\n      :- Union(all=[true], union=[a])\n      :  :- Calc(select=[a])\n      :  :  +- HashJoin(joinType=[InnerJoin], where=[(a = a0)], select=[a, a0], build=[left])\n      :  :     :- [#3] Exchange(distribution=[hash[a]])\n      :  :     +- [#6] Exchange(distribution=[hash[a]])\n      :  +- Calc(select=[a])\n      :     +- HashJoin(joinType=[InnerJoin], where=[(a = a0)], select=[a, a0], build=[left])\n      :        :- [#7] Exchange(distribution=[hash[a]])\n      :        +- [#8] Exchange(distribution=[hash[a]])\n      +- [#2] Exchange(distribution=[hash[a]])\n])
   :- Exchange(distribution=[hash[a]])
   :  +- TableSourceScan(table=[[testCatalog, default, t3]], fields=[a], hints=[[[OPTIONS options:{scan-mode=DELTA}]]])
   :- Exchange(distribution=[hash[a]])
   :  +- TableSourceScan(table=[[testCatalog, default, t3]], fields=[a], hints=[[[OPTIONS options:{scan-mode=FULL_OLD}]]])
   :- Exchange(distribution=[hash[a]])(reuse_id=[1])
   :  +- TableSourceScan(table=[[testCatalog, default, t1]], fields=[a], hints=[[[OPTIONS options:{scan-mode=FULL_NEW}]]])
   :- Exchange(distribution=[hash[a]])
   :  +- TableSourceScan(table=[[testCatalog, default, t2]], fields=[a], hints=[[[OPTIONS options:{scan-mode=FULL_NEW}]]])
   :- Reused(reference_id=[1])
   :- Exchange(distribution=[hash[a]])
   :  +- TableSourceScan(table=[[testCatalog, default, t2]], fields=[a], hints=[[[OPTIONS options:{scan-mode=DELTA}]]])
   :- Exchange(distribution=[hash[a]])
   :  +- TableSourceScan(table=[[testCatalog, default, t1]], fields=[a], hints=[[[OPTIONS options:{scan-mode=DELTA}]]])
   +- Exchange(distribution=[hash[a]])
      +- TableSourceScan(table=[[testCatalog, default, t2]], fields=[a], hints=[[[OPTIONS options:{scan-mode=FULL_OLD}]]])
]]>
		</Resource>
	</TestCase>
	<TestCase name="testIncrementalProcessingShuttleWithMultipleJoinsEmptyDelta">
		<Resource name="origin">
			<![CDATA[LogicalSink(table=[testCatalog.default.sink], fields=[a]), rowType=[RecordType(BIGINT a)]
+- LogicalProject(a=[$0]), rowType=[RecordType(BIGINT a)]
   +- LogicalJoin(condition=[=($0, $2)], joinType=[inner]), rowType=[RecordType(BIGINT a, BIGINT a0, BIGINT a1)]
      :- LogicalJoin(condition=[=($0, $1)], joinType=[inner]), rowType=[RecordType(BIGINT a, BIGINT a0)]
      :  :- LogicalTableScan(table=[[testCatalog, default, t1]]), rowType=[RecordType(BIGINT a)]
      :  +- LogicalTableScan(table=[[testCatalog, default, t2]]), rowType=[RecordType(BIGINT a)]
      +- LogicalTableScan(table=[[testCatalog, default, t3]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="ast">
			<![CDATA[
LogicalSink(table=[testCatalog.default.sink], fields=[a]), rowType=[RecordType(BIGINT a)]
+- LogicalProject(a=[$0]), rowType=[RecordType(BIGINT a)]
   +- LogicalJoin(condition=[=($0, $2)], joinType=[inner]), rowType=[RecordType(BIGINT a, BIGINT a0, BIGINT a1)]
      :- LogicalJoin(condition=[=($0, $1)], joinType=[inner]), rowType=[RecordType(BIGINT a, BIGINT a0)]
      :  :- LogicalTableScan(table=[[testCatalog, default, t1]], hints=[[[OPTIONS inheritPath:[] options:{scan-mode=FULL_NEW}]]]), rowType=[RecordType(BIGINT a)]
      :  +- LogicalTableScan(table=[[testCatalog, default, t2]], hints=[[[OPTIONS inheritPath:[] options:{scan-mode=FULL_NEW}]]]), rowType=[RecordType(BIGINT a)]
      +- LogicalTableScan(table=[[testCatalog, default, t3]], hints=[[[OPTIONS inheritPath:[] options:{scan-mode=DELTA}]]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="optimized rel plan">
			<![CDATA[
Sink(table=[testCatalog.default.sink], fields=[a]), rowType=[RecordType(BIGINT a)]
+- Calc(select=[a]), rowType=[RecordType(BIGINT a)]
   +- HashJoin(joinType=[InnerJoin], where=[=(a, a0)], select=[a, a0], build=[left]), rowType=[RecordType(BIGINT a, BIGINT a0)]
      :- Calc(select=[a]), rowType=[RecordType(BIGINT a)]
      :  +- HashJoin(joinType=[InnerJoin], where=[=(a, a0)], select=[a, a0], build=[left]), rowType=[RecordType(BIGINT a, BIGINT a0)]
      :     :- Exchange(distribution=[hash[a]]), rowType=[RecordType(BIGINT a)]
      :     :  +- TableSourceScan(table=[[testCatalog, default, t1]], fields=[a], hints=[[[OPTIONS options:{scan-mode=FULL_NEW}]]]), rowType=[RecordType(BIGINT a)]
      :     +- Exchange(distribution=[hash[a]]), rowType=[RecordType(BIGINT a)]
      :        +- TableSourceScan(table=[[testCatalog, default, t2]], fields=[a], hints=[[[OPTIONS options:{scan-mode=FULL_NEW}]]]), rowType=[RecordType(BIGINT a)]
      +- Exchange(distribution=[hash[a]]), rowType=[RecordType(BIGINT a)]
         +- TableSourceScan(table=[[testCatalog, default, t3]], fields=[a], hints=[[[OPTIONS options:{scan-mode=DELTA}]]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="optimized exec plan">
			<![CDATA[
Sink(table=[testCatalog.default.sink], fields=[a])
+- Calc(select=[a])
   +- MultipleInput(readOrder=[2,0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(a = a0)], select=[a, a0], build=[left])\n:- Calc(select=[a])\n:  +- HashJoin(joinType=[InnerJoin], where=[(a = a0)], select=[a, a0], build=[left])\n:     :- [#2] Exchange(distribution=[hash[a]])\n:     +- [#3] Exchange(distribution=[hash[a]])\n+- [#1] Exchange(distribution=[hash[a]])\n])
      :- Exchange(distribution=[hash[a]])
      :  +- TableSourceScan(table=[[testCatalog, default, t3]], fields=[a], hints=[[[OPTIONS options:{scan-mode=DELTA}]]])
      :- Exchange(distribution=[hash[a]])
      :  +- TableSourceScan(table=[[testCatalog, default, t1]], fields=[a], hints=[[[OPTIONS options:{scan-mode=FULL_NEW}]]])
      +- Exchange(distribution=[hash[a]])
         +- TableSourceScan(table=[[testCatalog, default, t2]], fields=[a], hints=[[[OPTIONS options:{scan-mode=FULL_NEW}]]])
]]>
		</Resource>
	</TestCase>
	<TestCase name="testIncrementalProcessingShuttleWithMultipleJoinsFirstRun">
		<Resource name="origin">
			<![CDATA[LogicalSink(table=[testCatalog.default.sink], fields=[a]), rowType=[RecordType(BIGINT a)]
+- LogicalProject(a=[$0]), rowType=[RecordType(BIGINT a)]
   +- LogicalJoin(condition=[=($0, $2)], joinType=[inner]), rowType=[RecordType(BIGINT a, BIGINT a0, BIGINT a1)]
      :- LogicalJoin(condition=[=($0, $1)], joinType=[inner]), rowType=[RecordType(BIGINT a, BIGINT a0)]
      :  :- LogicalTableScan(table=[[testCatalog, default, t1]]), rowType=[RecordType(BIGINT a)]
      :  +- LogicalTableScan(table=[[testCatalog, default, t2]]), rowType=[RecordType(BIGINT a)]
      +- LogicalTableScan(table=[[testCatalog, default, t3]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="ast">
			<![CDATA[
LogicalSink(table=[testCatalog.default.sink], fields=[a]), rowType=[RecordType(BIGINT a)]
+- LogicalProject(a=[$0]), rowType=[RecordType(BIGINT a)]
   +- LogicalJoin(condition=[=($0, $2)], joinType=[inner]), rowType=[RecordType(BIGINT a, BIGINT a0, BIGINT a1)]
      :- LogicalJoin(condition=[=($0, $1)], joinType=[inner]), rowType=[RecordType(BIGINT a, BIGINT a0)]
      :  :- LogicalTableScan(table=[[testCatalog, default, t1]], hints=[[[OPTIONS inheritPath:[] options:{scan-mode=FULL_NEW}]]]), rowType=[RecordType(BIGINT a)]
      :  +- LogicalTableScan(table=[[testCatalog, default, t2]], hints=[[[OPTIONS inheritPath:[] options:{scan-mode=FULL_NEW}]]]), rowType=[RecordType(BIGINT a)]
      +- LogicalTableScan(table=[[testCatalog, default, t3]], hints=[[[OPTIONS inheritPath:[] options:{scan-mode=DELTA}]]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="optimized rel plan">
			<![CDATA[
Sink(table=[testCatalog.default.sink], fields=[a]), rowType=[RecordType(BIGINT a)]
+- Calc(select=[a]), rowType=[RecordType(BIGINT a)]
   +- HashJoin(joinType=[InnerJoin], where=[=(a, a0)], select=[a, a0], build=[left]), rowType=[RecordType(BIGINT a, BIGINT a0)]
      :- Calc(select=[a]), rowType=[RecordType(BIGINT a)]
      :  +- HashJoin(joinType=[InnerJoin], where=[=(a, a0)], select=[a, a0], build=[left]), rowType=[RecordType(BIGINT a, BIGINT a0)]
      :     :- Exchange(distribution=[hash[a]]), rowType=[RecordType(BIGINT a)]
      :     :  +- TableSourceScan(table=[[testCatalog, default, t1]], fields=[a], hints=[[[OPTIONS options:{scan-mode=FULL_NEW}]]]), rowType=[RecordType(BIGINT a)]
      :     +- Exchange(distribution=[hash[a]]), rowType=[RecordType(BIGINT a)]
      :        +- TableSourceScan(table=[[testCatalog, default, t2]], fields=[a], hints=[[[OPTIONS options:{scan-mode=FULL_NEW}]]]), rowType=[RecordType(BIGINT a)]
      +- Exchange(distribution=[hash[a]]), rowType=[RecordType(BIGINT a)]
         +- TableSourceScan(table=[[testCatalog, default, t3]], fields=[a], hints=[[[OPTIONS options:{scan-mode=DELTA}]]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="optimized exec plan">
			<![CDATA[
Sink(table=[testCatalog.default.sink], fields=[a])
+- Calc(select=[a])
   +- MultipleInput(readOrder=[2,0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(a = a0)], select=[a, a0], build=[left])\n:- Calc(select=[a])\n:  +- HashJoin(joinType=[InnerJoin], where=[(a = a0)], select=[a, a0], build=[left])\n:     :- [#2] Exchange(distribution=[hash[a]])\n:     +- [#3] Exchange(distribution=[hash[a]])\n+- [#1] Exchange(distribution=[hash[a]])\n])
      :- Exchange(distribution=[hash[a]])
      :  +- TableSourceScan(table=[[testCatalog, default, t3]], fields=[a], hints=[[[OPTIONS options:{scan-mode=DELTA}]]])
      :- Exchange(distribution=[hash[a]])
      :  +- TableSourceScan(table=[[testCatalog, default, t1]], fields=[a], hints=[[[OPTIONS options:{scan-mode=FULL_NEW}]]])
      +- Exchange(distribution=[hash[a]])
         +- TableSourceScan(table=[[testCatalog, default, t2]], fields=[a], hints=[[[OPTIONS options:{scan-mode=FULL_NEW}]]])
]]>
		</Resource>
	</TestCase>
	<TestCase name="testIncrementalProcessingShuttleWithProject">
		<Resource name="origin">
			<![CDATA[LogicalSink(table=[testCatalog.default.sink], fields=[a]), rowType=[RecordType(BIGINT a)]
+- LogicalProject(a=[$0]), rowType=[RecordType(BIGINT a)]
   +- LogicalTableScan(table=[[testCatalog, default, t1]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="ast">
			<![CDATA[
LogicalSink(table=[testCatalog.default.sink], fields=[a]), rowType=[RecordType(BIGINT a)]
+- LogicalProject(a=[$0]), rowType=[RecordType(BIGINT a)]
   +- LogicalTableScan(table=[[testCatalog, default, t1]], hints=[[[OPTIONS inheritPath:[] options:{scan-mode=DELTA}]]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="optimized rel plan">
			<![CDATA[
Sink(table=[testCatalog.default.sink], fields=[a]), rowType=[RecordType(BIGINT a)]
+- TableSourceScan(table=[[testCatalog, default, t1]], fields=[a], hints=[[[OPTIONS options:{scan-mode=DELTA}]]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="optimized exec plan">
			<![CDATA[
Sink(table=[testCatalog.default.sink], fields=[a])
+- TableSourceScan(table=[[testCatalog, default, t1]], fields=[a], hints=[[[OPTIONS options:{scan-mode=DELTA}]]])
]]>
		</Resource>
	</TestCase>
	<TestCase name="testIncrementalProcessingShuttleWithProjectSupportedFunction">
		<Resource name="origin">
			<![CDATA[LogicalSink(table=[testCatalog.default.sink], fields=[EXPR$0]), rowType=[RecordType(BIGINT EXPR$0)]
+- LogicalProject(EXPR$0=[CAST(FLOOR(LOG($0))):BIGINT]), rowType=[RecordType(BIGINT EXPR$0)]
   +- LogicalTableScan(table=[[testCatalog, default, t1]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="ast">
			<![CDATA[
LogicalSink(table=[testCatalog.default.sink], fields=[EXPR$0]), rowType=[RecordType(BIGINT EXPR$0)]
+- LogicalProject(EXPR$0=[CAST(FLOOR(LOG($0))):BIGINT]), rowType=[RecordType(BIGINT EXPR$0)]
   +- LogicalTableScan(table=[[testCatalog, default, t1]], hints=[[[OPTIONS inheritPath:[] options:{scan-mode=DELTA}]]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="optimized rel plan">
			<![CDATA[
Sink(table=[testCatalog.default.sink], fields=[EXPR$0]), rowType=[RecordType(BIGINT EXPR$0)]
+- Calc(select=[CAST(FLOOR(LOG(a)) AS BIGINT) AS EXPR$0]), rowType=[RecordType(BIGINT EXPR$0)]
   +- TableSourceScan(table=[[testCatalog, default, t1]], fields=[a], hints=[[[OPTIONS options:{scan-mode=DELTA}]]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="optimized exec plan">
			<![CDATA[
Sink(table=[testCatalog.default.sink], fields=[EXPR$0])
+- Calc(select=[CAST(FLOOR(LOG(a)) AS BIGINT) AS EXPR$0])
   +- TableSourceScan(table=[[testCatalog, default, t1]], fields=[a], hints=[[[OPTIONS options:{scan-mode=DELTA}]]])
]]>
		</Resource>
	</TestCase>
	<TestCase name="testIncrementalProcessingShuttleWithFilterSupportedFunction">
		<Resource name="origin">
			<![CDATA[LogicalSink(table=[testCatalog.default.sink], fields=[a]), rowType=[RecordType(BIGINT a)]
+- LogicalProject(a=[$0]), rowType=[RecordType(BIGINT a)]
   +- LogicalFilter(condition=[AND(IS NOT NULL($0), >(CAST(FLOOR(LOG($0))):BIGINT, 0))]), rowType=[RecordType(BIGINT a)]
      +- LogicalTableScan(table=[[testCatalog, default, t1]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="ast">
			<![CDATA[
LogicalSink(table=[testCatalog.default.sink], fields=[a]), rowType=[RecordType(BIGINT a)]
+- LogicalProject(a=[$0]), rowType=[RecordType(BIGINT a)]
   +- LogicalFilter(condition=[AND(IS NOT NULL($0), >(CAST(FLOOR(LOG($0))):BIGINT, 0))]), rowType=[RecordType(BIGINT a)]
      +- LogicalTableScan(table=[[testCatalog, default, t1]], hints=[[[OPTIONS inheritPath:[] options:{scan-mode=DELTA}]]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="optimized rel plan">
			<![CDATA[
Sink(table=[testCatalog.default.sink], fields=[a]), rowType=[RecordType(BIGINT a)]
+- Calc(select=[a], where=[AND(>(CAST(FLOOR(LOG(a)) AS BIGINT), 0), IS NOT NULL(a))]), rowType=[RecordType(BIGINT a)]
   +- TableSourceScan(table=[[testCatalog, default, t1, filter=[]]], fields=[a], hints=[[[OPTIONS options:{scan-mode=DELTA}]]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="optimized exec plan">
			<![CDATA[
Sink(table=[testCatalog.default.sink], fields=[a])
+- Calc(select=[a], where=[((CAST(FLOOR(LOG(a)) AS BIGINT) > 0) AND a IS NOT NULL)])
   +- TableSourceScan(table=[[testCatalog, default, t1, filter=[]]], fields=[a], hints=[[[OPTIONS options:{scan-mode=DELTA}]]])
]]>
		</Resource>
	</TestCase>
	<TestCase name="testIncrementalProcessingShuttleWithUDTF">
		<Resource name="origin">
			<![CDATA[LogicalSink(table=[testCatalog.default.exploded_sink], fields=[a, word]), rowType=[RecordType(BIGINT a, VARCHAR(2147483647) word)]
+- LogicalProject(a=[$0], word=[$2]), rowType=[RecordType(BIGINT a, VARCHAR(2147483647) word)]
   +- LogicalCorrelate(correlation=[$cor0], joinType=[inner], requiredColumns=[{1}]), rowType=[RecordType(BIGINT a, VARCHAR(2147483647) b, VARCHAR(2147483647) word, INTEGER length)]
      :- LogicalTableScan(table=[[testCatalog, default, t3]]), rowType=[RecordType(BIGINT a, VARCHAR(2147483647) b)]
      +- LogicalTableFunctionScan(invocation=[TestUDTF($cor0.b)], rowType=[RecordType:peek_no_expand(VARCHAR(2147483647) word, INTEGER length)]), rowType=[RecordType:peek_no_expand(VARCHAR(2147483647) word, INTEGER length)]
]]>
		</Resource>
		<Resource name="ast">
			<![CDATA[
LogicalSink(table=[testCatalog.default.exploded_sink], fields=[a, word]), rowType=[RecordType(BIGINT a, VARCHAR(2147483647) word)]
+- LogicalProject(a=[$0], word=[$2]), rowType=[RecordType(BIGINT a, VARCHAR(2147483647) word)]
   +- LogicalCorrelate(correlation=[$cor0], joinType=[inner], requiredColumns=[{1}]), rowType=[RecordType(BIGINT a, VARCHAR(2147483647) b, VARCHAR(2147483647) word, INTEGER length)]
      :- LogicalTableScan(table=[[testCatalog, default, t3]], hints=[[[OPTIONS inheritPath:[] options:{scan-mode=DELTA}]]]), rowType=[RecordType(BIGINT a, VARCHAR(2147483647) b)]
      +- LogicalTableFunctionScan(invocation=[TestUDTF($cor0.b)], rowType=[RecordType:peek_no_expand(VARCHAR(2147483647) word, INTEGER length)]), rowType=[RecordType:peek_no_expand(VARCHAR(2147483647) word, INTEGER length)]
]]>
		</Resource>
		<Resource name="optimized rel plan">
			<![CDATA[
Sink(table=[testCatalog.default.exploded_sink], fields=[a, word]), rowType=[RecordType(BIGINT a, VARCHAR(2147483647) word)]
+- Calc(select=[a, word]), rowType=[RecordType(BIGINT a, VARCHAR(2147483647) word)]
   +- Correlate(invocation=[TestUDTF($cor0.b)], correlate=[table(TestUDTF($cor0.b))], select=[a,b,word,length], rowType=[RecordType(BIGINT a, VARCHAR(2147483647) b, VARCHAR(2147483647) word, INTEGER length)], joinType=[INNER]), rowType=[RecordType(BIGINT a, VARCHAR(2147483647) b, VARCHAR(2147483647) word, INTEGER length)]
      +- TableSourceScan(table=[[testCatalog, default, t3]], fields=[a, b], hints=[[[OPTIONS options:{scan-mode=DELTA}]]]), rowType=[RecordType(BIGINT a, VARCHAR(2147483647) b)]
]]>
		</Resource>
		<Resource name="optimized exec plan">
			<![CDATA[
Sink(table=[testCatalog.default.exploded_sink], fields=[a, word])
+- Calc(select=[a, word])
   +- Correlate(invocation=[TestUDTF($cor0.b)], correlate=[table(TestUDTF($cor0.b))], select=[a,b,word,length], rowType=[RecordType(BIGINT a, VARCHAR(2147483647) b, VARCHAR(2147483647) word, INTEGER length)], joinType=[INNER])
      +- TableSourceScan(table=[[testCatalog, default, t3]], fields=[a, b], hints=[[[OPTIONS options:{scan-mode=DELTA}]]])
]]>
		</Resource>
	</TestCase>
	<TestCase name="testIncrementalProcessingShuttleWithAggregate">
		<Resource name="origin">
			<![CDATA[LogicalSink(table=[testCatalog.default.aggSink], fields=[a, b]), rowType=[RecordType(BIGINT a, BIGINT b)]
+- LogicalProject(a=[1:BIGINT], b=[$0]), rowType=[RecordType(BIGINT a, BIGINT b)]
   +- LogicalAggregate(group=[{}], EXPR$1=[TestUDAF($0, $0)]), rowType=[RecordType(BIGINT EXPR$1)]
      +- LogicalTableScan(table=[[testCatalog, default, t1]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="ast">
			<![CDATA[
LogicalSink(table=[testCatalog.default.aggSink], fields=[a, b]), rowType=[RecordType(BIGINT a, BIGINT b)]
+- LogicalProject(a=[1:BIGINT], b=[$0]), rowType=[RecordType(BIGINT a, BIGINT b)]
   +- LogicalAggregate(group=[{}], EXPR$1=[TestUDAF($0, $0)]), rowType=[RecordType(BIGINT EXPR$1)]
      +- LogicalTableScan(table=[[testCatalog, default, t1]], hints=[[[OPTIONS inheritPath:[] options:{scan-mode=DELTA}]]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="optimized rel plan">
			<![CDATA[
Sink(table=[testCatalog.default.aggSink], fields=[a, b]), rowType=[RecordType(BIGINT a, BIGINT b)]
+- Calc(select=[1 AS a, EXPR$1 AS b]), rowType=[RecordType(BIGINT a, BIGINT b)]
   +- GlobalGroupAggregate(select=[TestUDAF(testudaf$0) AS EXPR$1], changelogMode=[I,UB,UA]), rowType=[RecordType(BIGINT EXPR$1)]
      +- Exchange(distribution=[single]), rowType=[RecordType(*org.apache.flink.table.planner.plan.utils.JavaUserDefinedAggFunctions$WeightedAvgAccum<`count` INT NOT NULL, `sum` BIGINT NOT NULL>* testudaf$0)]
         +- LocalGroupAggregate(select=[TestUDAF(a, a) AS testudaf$0], changelogMode=[I]), rowType=[RecordType(*org.apache.flink.table.planner.plan.utils.JavaUserDefinedAggFunctions$WeightedAvgAccum<`count` INT NOT NULL, `sum` BIGINT NOT NULL>* testudaf$0)]
            +- TableSourceScan(table=[[testCatalog, default, t1]], fields=[a], hints=[[[OPTIONS options:{scan-mode=DELTA}]]]), rowType=[RecordType(BIGINT a)]
]]>
		</Resource>
		<Resource name="optimized exec plan">
			<![CDATA[
Sink(table=[testCatalog.default.aggSink], fields=[a, b])
+- Calc(select=[1 AS a, EXPR$1 AS b])
   +- GlobalGroupAggregate(select=[TestUDAF(testudaf$0) AS EXPR$1])
      +- Exchange(distribution=[single])
         +- LocalGroupAggregate(select=[TestUDAF(a, a) AS testudaf$0])
            +- TableSourceScan(table=[[testCatalog, default, t1]], fields=[a], hints=[[[OPTIONS options:{scan-mode=DELTA}]]])
]]>
		</Resource>
	</TestCase>
</Root>
